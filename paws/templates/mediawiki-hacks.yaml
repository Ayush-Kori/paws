{{ if .Values.mediawiki.enabled }}
# We assume mediawiki is only enabled in a local dev environment, so...
apiVersion: batch/v1
kind: Job
metadata:
  name: scary-host-vol-builder
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "0"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "host-vols-%s" .Release.Name | quote }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: creating-host-vols
        image: {{ tpl .Values.mediawikiHacks.image.template . | quote }}
        command: 
          - mkdir
          - -p
          - /mnt/mnt/nfs/dumps-labstore1006.wikimedia.org
          - /mnt/mnt/nfs/dumps-labstore1007.wikimedia.org
          - /mnt/public/dumps
          - /mnt/data/project/paws/userhomes
        volumeMounts:
          - mountPath: /mnt
            name: security-disaster-only-for-minikube
      volumes:
        - name: security-disaster-only-for-minikube
          hostPath:
            path: /
---
apiVersion: batch/v1
kind: Job
metadata:
  name: scary-host-vol-perm-fix
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "permission-fix-%s" .Release.Name | quote }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: fixingperms-host-vols
        image: {{ tpl .Values.mediawikiHacks.image.template . | quote }}
        command: 
          - chown
          - -R
          - 52771:52771
          - /mnt/data/project/paws/userhomes
        volumeMounts:
          - mountPath: /mnt
            name: security-disaster-only-for-minikube
      volumes:
        - name: security-disaster-only-for-minikube
          hostPath:
            path: /
---
# minikube provisions a hostpath where extensions and config can be placed
apiVersion: batch/v1
kind: Job
metadata:
  name: mediawiki-hacks
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "2"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "mediawiki-hacks-%s" .Release.Name | quote }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: mediawiki-config-hacks
        image: {{ tpl .Values.mediawikiHacks.image.template . | quote }}
        command: ["/opt/hack-localsettings.sh"]
        volumeMounts:
          - mountPath: /opt/mediawiki
            name: mediawiki-data
            subPath: mediawiki
      volumes:
        - name: mediawiki-data
          persistentVolumeClaim:
            claimName: {{ if .Values.mediawiki.persistence.existingClaim }}{{ .Values.mediawiki.persistence.existingClaim }}{{- else }}{{ template "mediawiki.fullname" . }}-mediawiki-mediawiki{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mediawiki-oauth-install
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  template:
    metadata:
      name: {{ printf "mediawiki-extension-%s" .Release.Name | quote }}
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      restartPolicy: Never
      containers:
      - name: mediawiki-extension-install
        image: {{ tpl .Values.mediawikiHacks.image.template . | quote }}
        command: ["/opt/install-oauth.sh"]
        volumeMounts:
          - mountPath: /opt/mediawiki
            name: mediawiki-data
            subPath: mediawiki
      volumes:
        - name: mediawiki-data
          persistentVolumeClaim:
            claimName: {{ if .Values.mediawiki.persistence.existingClaim }}{{ .Values.mediawiki.persistence.existingClaim }}{{- else }}{{ template "mediawiki.fullname" . }}-mediawiki-mediawiki{{- end }}
{{ end }}
